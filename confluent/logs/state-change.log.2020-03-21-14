[2020-03-21 14:53:46,042] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2020-03-21 14:54:12,546] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition _confluent-license-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-03-21 14:54:12,546] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __confluent.support.metrics-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-03-21 14:54:12,548] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=false) to broker 0 for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:54:12,548] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=false) to broker 0 for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:54:12,549] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:54:12,549] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:54:12,624] TRACE [Controller id=0 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 192.168.8.101:9092 (id: 0 rack: null) (state.change.logger)
[2020-03-21 14:54:12,628] TRACE [Broker id=0] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 0 epoch 4 (state.change.logger)
[2020-03-21 14:54:12,628] TRACE [Broker id=0] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 0 epoch 4 (state.change.logger)
[2020-03-21 14:54:12,639] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:54:12,639] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:54:12,670] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition _confluent-license-0 (last update controller epoch 2) (state.change.logger)
[2020-03-21 14:54:12,673] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __confluent.support.metrics-0 (last update controller epoch 2) (state.change.logger)
[2020-03-21 14:54:12,673] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:54:12,674] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:54:12,680] TRACE [Controller id=0 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=_confluent-license,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__confluent.support.metrics,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker 192.168.8.101:9092 (id: 0 rack: null) (state.change.logger)
[2020-03-21 14:54:12,683] TRACE [Broker id=0] Cached leader info UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) for partition _confluent-license-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-03-21 14:54:12,683] TRACE [Broker id=0] Cached leader info UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) for partition __confluent.support.metrics-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-03-21 14:54:12,684] TRACE [Controller id=0 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 192.168.8.101:9092 (id: 0 rack: null) (state.change.logger)
[2020-03-21 14:54:31,834] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) to brokers Set(1) for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:54:31,834] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) to brokers Set(1) for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:54:31,835] TRACE [Controller id=0 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 3 sent to broker 192.168.8.101:9092 (id: 0 rack: null) (state.change.logger)
[2020-03-21 14:54:32,104] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) for partition _confluent-license-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-03-21 14:54:32,104] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=2, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) for partition __confluent.support.metrics-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-03-21 14:54:32,109] TRACE [Controller id=0 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 192.168.8.101:9093 (id: 1 rack: null) (state.change.logger)
[2020-03-21 14:55:36,969] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2020-03-21 14:55:38,741] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 192.168.8.101:9093 (id: 1 rack: null) (state.change.logger)
[2020-03-21 14:55:38,762] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition _confluent-license-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-03-21 14:55:38,762] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __confluent.support.metrics-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-03-21 14:55:38,763] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition _confluent-license-0 (state.change.logger)
[2020-03-21 14:55:38,763] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __confluent.support.metrics-0 (state.change.logger)
[2020-03-21 14:55:38,765] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='_confluent-license', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition _confluent-license-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 1 (state.change.logger)
[2020-03-21 14:55:38,765] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__confluent.support.metrics', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __confluent.support.metrics-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 1 (state.change.logger)
[2020-03-21 14:55:38,765] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 1 sent to broker 192.168.8.101:9093 (id: 1 rack: null) (state.change.logger)
[2020-03-21 14:55:38,779] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition _confluent-license-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition _confluent-license-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:306)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1399)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1841)
	at kafka.controller.KafkaController.process(KafkaController.scala:1884)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-03-21 14:55:38,781] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __confluent.support.metrics-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __confluent.support.metrics-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:306)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1399)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1841)
	at kafka.controller.KafkaController.process(KafkaController.scala:1884)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
